pipeline {
    agent any 

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                echo 'Tool: Maven or similar build automation tool' 
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                echo 'Tools: Selenium or similar testing frameworks'
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                echo 'Tool: SonarQube or similar code analysis tool'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Conducting security scan...'
                echo 'Tool: OWASP ZAP or similar security scanning tool'
            }
            post {
                success {
                    mail to: 'henry.and.ruth@gmail.com',
                        subject: 'build status: successful',
                        body: 'successful'
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server...'
                echo 'Tool: Puppet or similar deployment automation tool'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                echo 'Tools: Same as Unit and Integration Tests stage'
            }    
            post {
                success {
                    mail to: 'henry.and.ruth@gmail.com',
                        subject: 'integration tests on staging status: successful',
                        body: 'successful'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server...'
                echo 'Tool: Puppet or similar deployment automation tool'
            }
        }
	post {
        always { 
            emailext body: '''
                ${SCRIPT, template="groovy-html.template"}
                <pre>
                    ${BUILD_LOG, maxLines=500, escapeHtml=false} 
                </pre>
            ''',
            subject: "${env.JOB_NAME} - Build # ${env.BUILD_NUMBER} - ${currentBuild.currentResult}",
            to: 'henry.and.ruth@gmail.com'
        }
    }
    }
}